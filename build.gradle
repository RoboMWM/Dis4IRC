plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
    id 'net.minecrell.licenser' version "0.4.1"
    id 'com.github.johnrengelman.shadow' version '4.0.3'
    id 'io.spring.dependency-management' version '1.0.1.RELEASE'
    id 'jacoco'
}

group 'io.zachbr'
version '1.0.3-SNAPSHOT'

repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap/' }
    maven { url 'https://dl.bintray.com/dv8fromtheworld/maven/' }
    maven { url 'https://repo.spongepowered.org/maven' }
    mavenCentral()
}

jar {
    manifest.attributes(
            'Main-Class': "io.zachbr.dis4irc.Dis4IRCKt",
    )
}

jar.enabled = false
build.dependsOn(shadowJar)

import org.apache.tools.ant.filters.ReplaceTokens

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }

    return stdout.toString().trim()
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [
                'project-name'       : rootProject.name,
                'project-version'    : version,
                'project-git-hash'   : getGitHash(),
                'project-build-date' : new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC")), // use ISO8601
                'project-source-repo': 'https://github.com/zachbr/Dis4IRC'
        ]
    }
}

artifacts {
    shadowJar
}

shadowJar {
    classifier = null
    preserveFileTimestamps = false

    from "LICENSE.md"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.kitteh.irc:client-lib:5.1.2"
    implementation("net.dv8tion:JDA:3.8.3_463") {
        exclude module: 'opus-java'
    }

    implementation 'org.json:json:20180813'
    implementation "org.spongepowered:configurate-hocon:3.6"
    implementation "com.atlassian.commonmark:commonmark:0.12.1"
    implementation "com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:0.12.1"

    implementation "org.slf4j:slf4j-api:1.7.26"
    implementation "org.apache.logging.log4j:log4j-core:2.11.2"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.11.2"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.3.20"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
}

dependencyManagement {
    imports {
        mavenBom 'org.apache.logging.log4j:log4j-bom:2.11.1'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// updateLicenses | checkLicenses
license {
    header = project.file('HEADER.txt')
    ext {
        name = rootProject.name
        year = "2018-2019"
    }
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.2"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

check.dependsOn jacocoTestReport
